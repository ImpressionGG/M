function [X,T] = heun(f,p,x0,tmax,dt)%% HEUN  Solve differential equation using HEUN algorithm in time interval [0,t]%       with step size dt%%          [x,t] = heun(hoga(1))%          [x,t] = heun(hoga,p)%          [x,t] = heun(hoga,hoga(1))%%          [x,t] = heun(@flin,p,x0,tmax,dt) => invoke f = flin(x,p,t)%          [x,t] = heun(@hoga,x0,tmax,dt)   => invoke f = hoga(x,p,t)%%       See also: HOGA, SODE, SIMU%   if (nargin < 2)      p = f;  f = p.f;   end   if (nargin < 3 || isempty(x0))       x0 = p.x0;   end   if (nargin < 4)      tmax = p.tmax;   end   if (nargin < 5)      dt = p.dt;   end      t = 0; x = x0;   X = x; T = t;  % init result vectors      i = 0   while (t < tmax)      tn = min(t+dt,tmax);      delta = (tn - t);            dx_dt = f(x,p,t);      tm = t + delta/2;      xm = x + dx_dt*delta/2;            dxm_dt = f(xm,p,tm);      t = t+delta;      x = x + dxm_dt*delta;             i = i+1;      if (rem(i,1000) == 0)         fprintf('t = %g\n',t)      end            X (:,end+1) = x;      T(end+1) = t;     
   end
end